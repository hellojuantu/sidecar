name: BladePipe Install & Tail Logs

on:
  workflow_dispatch:
    inputs:
      ak:
        description: "BladePipe Access Key"
        required: true
      sk:
        description: "BladePipe Secret Key"
        required: true
      wsn:
        description: "BladePipe Worker WSN"
        required: true
      console_domain:
        description: "BladePipe Console Domain"
        required: false
        default: "west-us-1.bladepipe.com"

jobs:
  install-and-tail:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Show runner info
        run: |
          uname -a
          id

      - name: Set up Java (Temurin 8)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '8'

      - name: Ensure bladepipe user exists (optional but safer)
        run: |
          set -eux
          if ! id bladepipe &>/dev/null; then
            sudo useradd -m -d /home/bladepipe bladepipe
          fi
          if ! sudo grep -q '^bladepipe ' /etc/sudoers; then
            echo 'bladepipe ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers
          fi
          ls -ld /home/bladepipe

      - name: Run official installer (non-interactive)
        shell: bash
        run: |
          set -euo pipefail
          sudo /bin/bash -c "$(curl -fsSL https://download.bladepipe.com/binary/install_run.sh)" <<'EOF'
          bladepipe.auth.ak=${{ inputs.ak }}
          bladepipe.auth.sk=${{ inputs.sk }}
          bladepipe.worker.wsn=${{ inputs.wsn }}
          bladepipe.console.domain=${{ inputs.console_domain }}
          EOF

      - name: Wait for log file to appear
        shell: bash
        run: |
          set -euo pipefail
          LOG=~/logs/bladepipe/worker/sidecar.log
          ALT=/home/bladepipe/logs/bladepipe/worker/sidecar.log

          echo "[INFO] Waiting for log file to be created ..."
          for i in $(seq 1 60); do
            if [ -f "$LOG" ]; then
              echo "[INFO] Found $LOG"; export BP_LOG="$LOG"; break
            elif [ -f "$ALT" ]; then
              echo "[INFO] Found $ALT"; export BP_LOG="$ALT"; break
            else
              sleep 5
            fi
          done

          if [ -z "${BP_LOG:-}" ]; then
            echo "[WARN] Log file not found yet. Current tree:"
            sudo ls -la ~/logs || true
            sudo ls -la /home/bladepipe/logs || true
            BP_LOG="$ALT"
          fi
          echo "BP_LOG=$BP_LOG" >> $GITHUB_ENV

      - name: Tail BladePipe worker logs (keep job alive)
        shell: bash
        run: |
          set -euo pipefail
          echo "[INFO] Tailing logs from: $BP_LOG"
          sudo tail -n 200 -F "$BP_LOG"
